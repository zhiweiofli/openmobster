<?xml version="1.0" encoding="UTF-8"?>
<chapter id="blackberry">
   <chapterinfo>
      <author>
         <firstname>openmobster</firstname>
         <surname>at gmail.com</surname>
         <email>openmobster@gmail.com</email>
      </author>
   </chapterinfo>
   <title>Blackberry</title>
   <sect1>
   		<title>Blackberry</title>
   		 <para>
			The Blackberry platform by <ulink url="http://www.blackberry.com">Research In Motion Limited</ulink> is the first mobile platform supported
			by the <emphasis role="bold">OpenMobster Cloud Platform</emphasis>.
   		 </para>
   		 <sect2>
   		 	<title>Some Helpful Development Tips</title>
   		 	<para>
   		 		<itemizedlist>
   		 			<listitem>
   		 				The SDK is available at: <ulink url="http://na.blackberry.com/eng/developers/javaappdev/">Blackberry SDK</ulink>
   		 			</listitem>
   		 			<listitem>
   		 				The platform version supported is version 4.3.0+. The Blackberry platform is fully backward compatible
   		 			</listitem>
   		 			<listitem>
   		 			    Blackberry provides an Eclipse plugin. Blackberry Development is officially supported only
   		 			    on the Windows Platform. 
   		 			</listitem>
   		 			<listitem>
   		 				Blackberry follows a two-stage compilation process. The first stage called preverification (preverify) pre-verifies
   		 				the Java code and produces the artifact to be processed by the next stage. The next stage called (rapc) actually produces
   		 				the binary that can be installed on the device. The extension of the generated binary is .cod
   		 			</listitem>
   		 			<listitem>
   		 				Moblets/Apps that integrate with the <emphasis>OpenMobster Cloud Platform</emphasis> MUST combine their App's classes with the
   		 				<emphasis role="bold">moblet-runtime.jar</emphasis> library before compiling their App into a binary
   		 			</listitem>
   		 			<listitem>
   		 			    Blackberry has a selected set of APIs which require "signing" the binary (.cod) before installing it on the device. The <emphasis>OpenMobster</emphasis>
   		 			    binaries makes use of these APIs, and hence requires "signing" before installing it on the device. For more information about the
   		 			    "signing" process: <ulink url="http://na.blackberry.com/eng/developers/javaappdev/codekeys.jsp">Signing Process</ulink>
   		 			</listitem>
   		 			<listitem>
   		 			   Code Signing is not required for installing/testing Apps in a simulation environment. In fact all the <emphasis>OpenMobster</emphasis> binaries have been
   		 			   thoroughly tested on a 4.3.0 OS simulator. All tests have passed without any errors, warnings, or crashes.
   		 			</listitem>
   		 			<listitem>
   		 				At the time of this first community release, the <emphasis>OpenMobster</emphasis> Blackberry binaries have not been signed or tested on an actual device.
 						However, the developer can sign and distribute these binaries along with their Apps, if they
 						possess their own signing key. In the future, the binaries should come signed with the keys issued by RIM to <emphasis>OpenMobster Community</emphasis>  		 				
   		 			</listitem>
   		 		</itemizedlist>
   		 	</para>
   		 </sect2>
   </sect1>
</chapter>
